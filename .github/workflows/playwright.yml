name: Playwright Tests
on:
    workflow_dispatch:
        inputs:
            browser:
                description: Browser to run the tests on
                type: choice
                options:
                    - 'chromium'
                    - 'firefox'
                    - 'webkit'
                    - 'all-browsers'
                default: 'chromium'
            os:
                description: OS to run the tests on
                type: choice
                options:
                    - 'ubuntu-latest'
                    - 'macos-latest'
                default: 'ubuntu-latest'
            additional_pw_args:
                default: ''
                type: string
                description: Additional arguments to pass to Playwright
jobs:
    test:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'

            - name: Create .env file
              run: |
                  touch .env
                  echo BASE_URL=https://www.bamfunds.com/ >> .env
                  echo API_URL=https://www.bamfunds.com/api >> .env

            - id: cache
              uses: actions/cache@v4
              with:
                  path: ./node_modules
                  key: modules-${{ hashFiles('package-lock.json') }}

            - if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Get installed Playwright version
              id: playwright-version
              run: echo "PLAYWRIGHT_VERSION=$(
                  npm ls @playwright/test --json | jq -r '.dependencies."@playwright/test".version')" >> $GITHUB_ENV

            - name: Installed Playwright version
              run: |
                  echo "Playwright's Version: ${{ env.PLAYWRIGHT_VERSION }}"

            - name: Cache playwright binaries
              uses: actions/cache@v4
              id: playwright-cache
              with:
                  path: ~/.cache/ms-playwright
                  key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

            - name: Install Playwright Browsers
              run: npx playwright install --with-deps
              if: steps.playwright-cache.outputs.cache-hit != 'true'

            - name: Install system dependencies for WebKit
              # Some WebKit dependencies seem to lay outside the cache and will need to be installed separately
              if: ${{ (inputs.browser == 'webkit' || inputs.browser == 'all-browsers') && steps.playwright-cache.outputs.cache-hit == 'true' }}
              run: npx playwright install-deps webkit

            - name: Set current date as env variable
              run: echo "NOW=$(date -u +'%Y-%m-%dT%H%M%S')" >> $GITHUB_ENV

            - name: Run Playwright tests
              if: inputs.browser == 'all-browsers'
              run: npx playwright test ${{ inputs.additional_pw_args }}

            - name: Run Playwright tests
              if: inputs.browser != 'all-browsers'
              run: npx playwright test --project=${{ inputs.browser }} ${{ inputs.additional_pw_args }}

            - uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: playwright-report-${{ inputs.browser }}_${{ env.NOW }}
                  path: playwright-report/
                  retention-days: 30

            - name: Load test report history
              uses: actions/checkout@v3
              if: always()
              continue-on-error: true
              with:
                  ref: gh-pages
                  path: gh-pages

            - name: Build test report
              uses: simple-elf/allure-report-action@v1.7
              if: always()
              with:
                  gh_pages: gh-pages
                  allure_history: allure-history
                  allure_results: allure-results

            - name: Publish test report
              uses: peaceiris/actions-gh-pages@v3
              if: always()
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_branch: gh-pages
                  publish_dir: allure-history

            - name: Write URL in summary
              if: always()
              run: echo "### Test results - https://smadalins.github.io/bam/${{ github.run_number }}/index.html" >> $GITHUB_STEP_SUMMARY
